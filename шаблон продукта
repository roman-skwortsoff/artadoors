Нужен совет по django. Пишем интернет магазин, страницу просмотра деталей продукта. Нужно, чтобы при окрытии страницы ниже картинки, цены, выбора доп.опций выходил текст описания продукта {{ product.description }}, а нам ним кнопка-заглавие "описание". Рядом с этой кнопкой правее должна быть "характеристики" , при нажатии на которую вместо текста-описания  должна выводиться таблица с характеристиками (в моделях Product:  characteristics = models.JSONField(null=True, blank=True, verbose_name='Характеристики в формате JSON') ).  Картинки, выбор доп.опций реализованы, нужно в помощью javascript и css реализовать нажитие кнопок и смену текста на таблицу и обратно. Напиши пожалуйста как это делается с примером кода
ChatGPT сказал:
ChatGPT
Для реализации подобной функциональности с использованием JavaScript и CSS, нужно:

Создать две кнопки (например, "Описание" и "Характеристики").
Добавить два блока (<div>), один для текста описания продукта, другой для таблицы характеристик.
Использовать JavaScript для переключения видимости этих блоков при нажатии на соответствующие кнопки.
Ниже приведен пример кода, который реализует эту функциональность:

1. HTML
html
Копировать код
<div class="product-details">
    <h1>{{ product.name }}</h1>
    <img src="{{ product.image.url }}" alt="{{ product.name }}">
    <p>Цена: {{ product.price }}</p>
    
    <!-- Дополнительные опции -->
    <div class="product-options">
        <!-- Опции здесь -->
    </div>
    
    <!-- Кнопки переключения -->
    <div class="tabs">
        <button id="description-tab" class="tab-button active">Описание</button>
        <button id="characteristics-tab" class="tab-button">Характеристики</button>
    </div>
    
    <!-- Блоки содержимого -->
    <div id="description-content" class="tab-content">
        <p>{{ product.description }}</p>
    </div>
    <div id="characteristics-content" class="tab-content hidden">
        <table>
            <thead>
                <tr>
                    <th>Характеристика</th>
                    <th>Значение</th>
                </tr>
            </thead>
            <tbody>
                {% for key, value in product.characteristics.items %}
                <tr>
                    <td>{{ key }}</td>
                    <td>{{ value }}</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>
2. CSS
css
Копировать код
/* Стили для кнопок */
.tab-button {
    padding: 10px 20px;
    cursor: pointer;
    border: 1px solid #ddd;
    background-color: #f9f9f9;
    margin-right: 10px;
}

.tab-button.active {
    background-color: #007bff;
    color: white;
}

/* Скрытие содержимого */
.tab-content {
    display: none;
}

.tab-content.visible {
    display: block;
}
3. JavaScript
javascript
Копировать код
document.addEventListener('DOMContentLoaded', function () {
    // Получаем элементы
    const descriptionTab = document.getElementById('description-tab');
    const characteristicsTab = document.getElementById('characteristics-tab');
    const descriptionContent = document.getElementById('description-content');
    const characteristicsContent = document.getElementById('characteristics-content');

    // Функция для переключения вкладок
    function showTab(tab) {
        // Убираем активный класс у всех кнопок
        descriptionTab.classList.remove('active');
        characteristicsTab.classList.remove('active');

        // Скрываем все содержимое
        descriptionContent.classList.remove('visible');
        characteristicsContent.classList.remove('visible');

        // Показываем выбранное содержимое
        if (tab === 'description') {
            descriptionTab.classList.add('active');
            descriptionContent.classList.add('visible');
        } else if (tab === 'characteristics') {
            characteristicsTab.classList.add('active');
            characteristicsContent.classList.add('visible');
        }
    }

    // Слушатели событий для кнопок
    descriptionTab.addEventListener('click', function () {
        showTab('description');
    });

    characteristicsTab.addEventListener('click', function () {
        showTab('characteristics');
    });

    // Показываем описание по умолчанию
    showTab('description');
});
Как это работает:
HTML: Мы создаем два блока (#description-content и #characteristics-content), а также кнопки для переключения между ними.
CSS: Скрываем блоки по умолчанию, показываем их только при наличии класса visible. Добавляем стили для активных кнопок.
JavaScript: Добавляем обработчики событий на кнопки, чтобы изменять видимость блоков и переключать класс active для кнопок.
Результат:
При нажатии на кнопку "Описание" будет отображаться текст описания продукта, а при нажатии на кнопку "Характеристики" вместо текста будет отображаться таблица с характеристиками.








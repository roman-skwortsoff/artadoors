version: '3.8'

services:
  web:
    build: .
    container_name: django_app
    command: >
      sh -c "/wait-for-it.sh db:5432 --strict --timeout=60 -- &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn artadoors.wsgi:application -b 0.0.0.0:8000 --workers 4 --timeout 60"
    volumes:
      - .:/code
      - static_volume:/code/static  # Статика
      - media_volume:/code/media    # Медиафайлы
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=artadoors.settings.prod
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/code/static  # Используем тот же том, что и в Django
      - media_volume:/code/media    # Используем тот же том, что и в Django
      - /etc/letsencrypt:/etc/letsencrypt  # Монтируем сертификаты в контейнер
    depends_on:
      - web

volumes:
  static_volume:
  media_volume:
  postgres_data: